{
  "definitions": {
    "cds.xt": {
      "kind": "context"
    },
    "cds.xt.CSN": {
      "kind": "type",
      "@open": true,
      "elements": {}
    },
    "cds.xt.TAR": {
      "kind": "type",
      "type": "cds.LargeBinary"
    },
    "cds.xt.XML": {
      "kind": "type",
      "type": "cds.LargeString"
    },
    "cds.xt.Locale": {
      "kind": "type",
      "type": "cds.String"
    },
    "cds.xt.TenantID": {
      "kind": "type",
      "type": "cds.String"
    },
    "cds.xt.CSNConsumer": {
      "kind": "type",
      "type": "cds.String",
      "enum": {
        "nodejs": {},
        "java": {}
      }
    },
    "cds.xt.I18N": {
      "kind": "type",
      "@open": true,
      "elements": {}
    },
    "cds.xt.ModelProviderService": {
      "@source": "@sap/cds-mtxs/srv/model-provider.cds",
      "kind": "service",
      "@protocol": "rest",
      "@requires": [
        "internal-user"
      ],
      "@path": "/-/cds/model-provider",
      "@impl": "@sap/cds-mtxs/srv/model-provider.js"
    },
    "cds.xt.ModelProviderService.getCsn": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.xt.TenantID"
        },
        "toggles": {
          "@cds.validate": false,
          "items": {
            "type": "cds.String"
          }
        },
        "for": {
          "@cds.java.name": "runtime",
          "type": "cds.xt.CSNConsumer"
        },
        "flavor": {
          "type": "cds.String",
          "enum": {
            "parsed": {},
            "xtended": {},
            "inferred": {}
          }
        },
        "base": {
          "type": "cds.Boolean"
        },
        "activated": {
          "type": "cds.Boolean"
        }
      },
      "returns": {
        "@open": true,
        "type": "cds.xt.CSN"
      }
    },
    "cds.xt.ModelProviderService.getExtCsn": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.xt.TenantID"
        },
        "toggles": {
          "@cds.validate": false,
          "items": {
            "type": "cds.String"
          }
        },
        "for": {
          "@cds.java.name": "runtime",
          "type": "cds.xt.CSNConsumer"
        }
      },
      "returns": {
        "@open": true,
        "type": "cds.xt.CSN"
      }
    },
    "cds.xt.ModelProviderService.getExtResources": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.String"
        }
      },
      "returns": {
        "type": "cds.xt.TAR"
      }
    },
    "cds.xt.ModelProviderService.getEdmx": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.xt.TenantID"
        },
        "toggles": {
          "@cds.validate": false,
          "items": {
            "type": "cds.String"
          }
        },
        "service": {
          "type": "cds.String"
        },
        "model": {
          "@open": true,
          "type": "cds.xt.CSN"
        },
        "locale": {
          "type": "cds.xt.Locale"
        },
        "flavor": {
          "type": "cds.String",
          "enum": {
            "v2": {},
            "v4": {},
            "w4": {},
            "x4": {}
          }
        },
        "for": {
          "@cds.java.name": "runtime",
          "type": "cds.xt.CSNConsumer"
        }
      },
      "returns": {
        "type": "cds.xt.XML"
      }
    },
    "cds.xt.ModelProviderService.getI18n": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.xt.TenantID"
        },
        "toggles": {
          "@cds.validate": false,
          "items": {
            "type": "cds.String"
          }
        },
        "locale": {
          "type": "cds.xt.Locale"
        }
      },
      "returns": {
        "@open": true,
        "type": "cds.xt.I18N"
      }
    },
    "cds.xt.ModelProviderService.isExtended": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.xt.TenantID"
        }
      },
      "returns": {
        "type": "cds.Boolean"
      }
    },
    "cds.xt.ModelProviderService.getExtensions": {
      "kind": "action",
      "params": {
        "tenant": {
          "type": "cds.xt.TenantID"
        }
      },
      "returns": {
        "@open": true,
        "type": "cds.xt.CSN"
      }
    },
    "cds.xt.ModelProviderService.getResources": {
      "kind": "action",
      "returns": {
        "type": "cds.xt.TAR"
      }
    },
    "cds.xt.SaasProvisioningService": {
      "@source": "@sap/cds-mtxs/srv/cf/saas-provisioning-service.cds",
      "kind": "service",
      "@protocol": "rest",
      "@requires": [
        "cds.Subscriber",
        "mtcallback",
        "internal-user"
      ],
      "@path": "/-/cds/saas-provisioning",
      "@impl": "@sap/cds-mtxs/srv/cf/saas-provisioning-service.js"
    },
    "cds.xt.SaasProvisioningService.tenant": {
      "kind": "entity",
      "@open": true,
      "@cds.persistence.skip": true,
      "elements": {
        "subscribedTenantId": {
          "@assert.format": "^[^*]+$",
          "key": true,
          "type": "cds.String"
        },
        "subscribedSubaccountId": {
          "type": "cds.String",
          "length": 36
        },
        "subscribedSubdomain": {
          "type": "cds.String",
          "length": 256
        },
        "subscriptionAppName": {
          "type": "cds.String",
          "length": 256
        },
        "eventType": {
          "type": "cds.String",
          "length": 64
        }
      }
    },
    "cds.xt.SaasProvisioningService.dependencies": {
      "kind": "function",
      "returns": {
        "items": {
          "elements": {
            "xsappname": {
              "type": "cds.String"
            }
          }
        }
      }
    },
    "cds.xt.SaasProvisioningService.UpgradeOptions": {
      "kind": "type",
      "@open": true,
      "elements": {}
    },
    "cds.xt.SaasProvisioningService.UpgradeResults": {
      "kind": "type",
      "@open": true,
      "elements": {}
    },
    "cds.xt.SaasProvisioningService.upgrade": {
      "kind": "action",
      "params": {
        "tenants": {
          "items": {
            "type": "cds.String"
          }
        },
        "options": {
          "@open": true,
          "type": "cds.xt.SaasProvisioningService.UpgradeOptions"
        }
      },
      "returns": {
        "@open": true,
        "type": "cds.xt.SaasProvisioningService.UpgradeResults"
      }
    },
    "cds.xt.SaasProvisioningService.getAppUrl": {
      "kind": "function",
      "params": {
        "subscriptionPayload": {
          "@open": true,
          "elements": {}
        },
        "subscriptionHeaders": {
          "@open": true,
          "elements": {}
        }
      },
      "returns": {
        "type": "cds.String"
      }
    },
    "cds.xt.DeploymentService": {
      "@source": "@sap/cds-mtxs/srv/deployment-service.cds",
      "kind": "service",
      "@protocol": "rest",
      "@requires": [
        "cds.Subscriber",
        "internal-user"
      ],
      "@path": "/-/cds/deployment",
      "@impl": "@sap/cds-mtxs/srv/deployment-service.js"
    },
    "cds.xt.DeploymentService.subscribe": {
      "kind": "action",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "metadata": {
          "@open": true,
          "elements": {}
        },
        "options": {
          "@open": true,
          "elements": {}
        }
      }
    },
    "cds.xt.DeploymentService.unsubscribe": {
      "kind": "action",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "options": {
          "@open": true,
          "elements": {}
        }
      }
    },
    "cds.xt.DeploymentService.extend": {
      "kind": "action",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "csvs": {
          "@open": true,
          "elements": {}
        }
      }
    },
    "cds.xt.DeploymentService.upgrade": {
      "kind": "action",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "options": {
          "@open": true,
          "elements": {}
        }
      }
    },
    "cds.xt.DeploymentService.deploy": {
      "kind": "action",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "options": {
          "@open": true,
          "elements": {}
        }
      }
    },
    "cds.xt.DeploymentService.getTables": {
      "kind": "function",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        }
      },
      "returns": {
        "items": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.DeploymentService.getColumns": {
      "kind": "function",
      "params": {
        "tenant": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "table": {
          "@mandatory": true,
          "type": "cds.String"
        },
        "params": {
          "@open": true,
          "elements": {}
        }
      },
      "returns": {
        "items": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.DeploymentService.getTenants": {
      "kind": "function",
      "params": {
        "options": {
          "@open": true,
          "elements": {}
        }
      },
      "returns": {
        "items": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.DeploymentService.getContainers": {
      "kind": "function",
      "params": {
        "options": {
          "@open": true,
          "elements": {}
        }
      },
      "returns": {
        "items": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.ExtensibilityService": {
      "@source": "@sap/cds-mtxs/srv/extensibility-service.cds",
      "kind": "service",
      "@protocol": "rest",
      "@requires": [
        "cds.ExtensionDeveloper",
        "internal-user"
      ],
      "@path": "/-/cds/extensibility",
      "@impl": "@sap/cds-mtxs/srv/extensibility-service.js",
      "@private": true
    },
    "cds.xt.ExtensibilityService.ActivationLevel": {
      "kind": "type",
      "type": {
        "ref": [
          "cds.xt.Extensions",
          "activated"
        ]
      }
    },
    "cds.xt.ExtensibilityService.CSN": {
      "kind": "type",
      "type": "cds.String"
    },
    "cds.xt.ExtensibilityService.CSN_OR_CDL": {
      "kind": "type",
      "type": "cds.String"
    },
    "cds.xt.ExtensibilityService.FILE": {
      "kind": "type",
      "elements": {
        "name": {
          "type": "cds.String"
        },
        "content": {
          "type": "cds.LargeString"
        }
      }
    },
    "cds.xt.ExtensibilityService.set": {
      "kind": "action",
      "params": {
        "extension": {
          "items": {
            "type": "cds.xt.ExtensibilityService.CSN_OR_CDL"
          }
        },
        "resources": {
          "items": {
            "type": "cds.xt.ExtensibilityService.FILE"
          }
        },
        "tag": {
          "type": {
            "ref": [
              "cds.xt.Extensions",
              "tag"
            ]
          }
        },
        "activate": {
          "type": "cds.xt.ExtensibilityService.ActivationLevel"
        },
        "tenant": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.ExtensibilityService.Extensions": {
      "kind": "entity",
      "@cds.persistence.skip": true,
      "elements": {
        "ID": {
          "key": true,
          "type": "cds.String"
        },
        "csn": {
          "@open": true,
          "items": {
            "type": "cds.xt.ExtensibilityService.CSN_OR_CDL"
          }
        },
        "i18n": {
          "items": {
            "type": "cds.xt.ExtensibilityService.FILE"
          }
        },
        "timestamp": {
          "@cds.on.insert": {
            "=": "$now"
          },
          "@cds.on.update": {
            "=": "$now"
          },
          "type": "cds.Timestamp"
        }
      }
    },
    "cds.xt.ExtensibilityService.TAR": {
      "kind": "type",
      "type": "cds.LargeBinary"
    },
    "cds.xt.ExtensibilityService.pull": {
      "kind": "action",
      "@requires": [
        "cds.ExtensionDeveloper"
      ],
      "@private": true,
      "returns": {
        "type": "cds.xt.ExtensibilityService.TAR"
      }
    },
    "cds.xt.ExtensibilityService.push": {
      "kind": "action",
      "@requires": [
        "cds.ExtensionDeveloper"
      ],
      "@private": true,
      "params": {
        "extension": {
          "type": "cds.xt.ExtensibilityService.TAR"
        },
        "tag": {
          "type": {
            "ref": [
              "cds.xt.Extensions",
              "tag"
            ]
          }
        },
        "tenant": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.ExtensibilityService.getMigratedProjects": {
      "kind": "action",
      "@requires": [
        "cds.ExtensionDeveloper"
      ],
      "@private": true,
      "params": {
        "tagRule": {
          "type": "cds.String"
        },
        "defaultTag": {
          "type": "cds.String"
        },
        "tenant": {
          "type": "cds.String"
        }
      },
      "returns": {
        "type": "cds.LargeBinary"
      }
    },
    "cds.xt.JobsService": {
      "@source": "@sap/cds-mtxs/srv/jobs-service.cds",
      "kind": "service",
      "@path": "/-/cds/jobs",
      "@protocol": "rest",
      "@impl": "@sap/cds-mtxs/srv/jobs-service.js"
    },
    "cds.xt.JobsService.Set": {
      "kind": "type",
      "elements": {}
    },
    "cds.xt.JobsService.enqueue": {
      "kind": "action",
      "@open": true,
      "@requires": [
        "internal-user",
        "cds.Subscriber",
        "mtcallback"
      ],
      "params": {
        "service": {
          "type": "cds.String"
        },
        "op": {
          "type": "cds.String"
        },
        "clusters": {
          "@cds.validate": false,
          "items": {
            "type": "cds.xt.JobsService.Set"
          }
        },
        "args": {
          "@cds.validate": false,
          "items": {
            "elements": {}
          }
        },
        "callback": {
          "elements": {}
        }
      },
      "returns": {
        "type": "cds.xt.JobsService.Jobs"
      }
    },
    "cds.xt.JobsService.pollJob": {
      "kind": "function",
      "@open": true,
      "params": {
        "ID": {
          "type": "cds.String"
        }
      },
      "returns": {
        "elements": {}
      }
    },
    "cds.xt.JobsService.pollTask": {
      "kind": "function",
      "@open": true,
      "params": {
        "ID": {
          "type": "cds.String"
        }
      },
      "returns": {
        "elements": {}
      }
    },
    "cds.xt.JobsService.Jobs": {
      "kind": "entity",
      "@cds.persistence.exists": true,
      "@readonly": true,
      "projection": {
        "from": {
          "ref": [
            "cds.xt.Jobs"
          ]
        }
      },
      "elements": {
        "ID": {
          "key": true,
          "type": "cds.String"
        },
        "status": {
          "type": "cds.xt.Status",
          "default": {
            "#": "QUEUED"
          }
        },
        "op": {
          "type": "cds.String"
        },
        "error": {
          "type": "cds.String"
        },
        "result": {
          "type": "cds.LargeString"
        },
        "createdAt": {
          "type": "cds.Timestamp"
        },
        "tasks": {
          "type": "cds.Composition",
          "cardinality": {
            "max": "*"
          },
          "target": "cds.xt.JobsService.Tasks",
          "on": [
            {
              "ref": [
                "tasks",
                "job"
              ]
            },
            "=",
            {
              "ref": [
                "$self"
              ]
            }
          ]
        }
      }
    },
    "cds.xt.JobsService.Tasks": {
      "kind": "entity",
      "@cds.persistence.exists": true,
      "@readonly": true,
      "projection": {
        "from": {
          "ref": [
            "cds.xt.Tasks"
          ]
        }
      },
      "elements": {
        "job": {
          "key": true,
          "type": "cds.Association",
          "target": "cds.xt.JobsService.Jobs",
          "keys": [
            {
              "ref": [
                "ID"
              ]
            }
          ]
        },
        "ID": {
          "key": true,
          "type": "cds.String"
        },
        "tenant": {
          "type": "cds.String",
          "length": 100
        },
        "op": {
          "type": "cds.String"
        },
        "error": {
          "type": "cds.String"
        },
        "status": {
          "type": "cds.xt.Status",
          "default": {
            "#": "QUEUED"
          }
        },
        "createdAt": {
          "type": "cds.Timestamp"
        },
        "database": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.Extensions": {
      "kind": "entity",
      "elements": {
        "ID": {
          "key": true,
          "type": "cds.UUID"
        },
        "tag": {
          "type": "cds.String"
        },
        "csn": {
          "type": "cds.LargeString"
        },
        "i18n": {
          "type": "cds.LargeString"
        },
        "sources": {
          "type": "cds.LargeBinary"
        },
        "activated": {
          "type": "cds.String"
        },
        "timestamp": {
          "@cds.on.insert": {
            "=": "$now"
          },
          "@cds.on.update": {
            "=": "$now"
          },
          "type": "cds.Timestamp"
        }
      }
    },
    "cds.xt.Tenants": {
      "kind": "entity",
      "@cds.persistence.exists": true,
      "elements": {
        "ID": {
          "key": true,
          "type": "cds.String"
        },
        "metadata": {
          "type": "cds.String"
        },
        "createdAt": {
          "@cds.on.insert": {
            "=": "$now"
          },
          "type": "cds.Timestamp"
        },
        "modifiedAt": {
          "@cds.on.insert": {
            "=": "$now"
          },
          "@cds.on.update": {
            "=": "$now"
          },
          "type": "cds.Timestamp"
        }
      }
    },
    "cds.xt.Jobs": {
      "kind": "entity",
      "@cds.persistence.exists": true,
      "elements": {
        "ID": {
          "key": true,
          "type": "cds.String"
        },
        "status": {
          "type": "cds.xt.Status",
          "default": {
            "#": "QUEUED"
          }
        },
        "op": {
          "type": "cds.String"
        },
        "error": {
          "type": "cds.String"
        },
        "result": {
          "type": "cds.LargeString"
        },
        "createdAt": {
          "type": "cds.Timestamp"
        },
        "tasks": {
          "type": "cds.Composition",
          "cardinality": {
            "max": "*"
          },
          "target": "cds.xt.Tasks",
          "on": [
            {
              "ref": [
                "tasks",
                "job"
              ]
            },
            "=",
            {
              "ref": [
                "$self"
              ]
            }
          ]
        }
      }
    },
    "cds.xt.Tasks": {
      "kind": "entity",
      "@cds.persistence.exists": true,
      "elements": {
        "job": {
          "key": true,
          "type": "cds.Association",
          "target": "cds.xt.Jobs",
          "keys": [
            {
              "ref": [
                "ID"
              ]
            }
          ]
        },
        "ID": {
          "key": true,
          "type": "cds.String"
        },
        "tenant": {
          "type": "cds.String",
          "length": 100
        },
        "op": {
          "type": "cds.String"
        },
        "error": {
          "type": "cds.String"
        },
        "status": {
          "type": "cds.xt.Status",
          "default": {
            "#": "QUEUED"
          }
        },
        "createdAt": {
          "type": "cds.Timestamp"
        },
        "database": {
          "type": "cds.String"
        }
      }
    },
    "cds.xt.Status": {
      "kind": "type",
      "type": "cds.String",
      "enum": {
        "QUEUED": {},
        "RUNNING": {},
        "FINISHED": {},
        "FAILED": {}
      }
    }
  },
  "meta": {
    "creator": "CDS Compiler v5.6.0",
    "flavor": "inferred"
  },
  "$version": "2.0"
}