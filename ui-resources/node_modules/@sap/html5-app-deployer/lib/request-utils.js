'use strict';

const axios  = require('axios');
const FormData = require('form-data');

// convert request options to 'axios' format
const axiosRequestOptions = (method , request) => {
  const clonedRequestOpt = Object.assign({}, request);
  clonedRequestOpt.method = method;
  clonedRequestOpt.transformResponse = function (res){   // prevent JSON.parse
    return res;
  };
  if (clonedRequestOpt.body){
    if (clonedRequestOpt.body instanceof  FormData){
      clonedRequestOpt.headers = {
        ...clonedRequestOpt.headers,
        ...clonedRequestOpt.body.getHeaders(),
      };
    }
    clonedRequestOpt.data = clonedRequestOpt.body;
    delete clonedRequestOpt.body;
  }
  if (clonedRequestOpt.auth) {
    clonedRequestOpt.auth.username = clonedRequestOpt.auth.user;
    clonedRequestOpt.auth.password = clonedRequestOpt.auth.pass;
    delete clonedRequestOpt.auth.user;
    delete  clonedRequestOpt.auth.pass;
  }
  return clonedRequestOpt;
};

const get = (requestOptions, callback) => {
  (async () => {
    const {error , response , body} = await axiosRequest('get',requestOptions);
    return callback(error ,response , body);
  })();
};

const post = (requestOptions,callback) => {
  (async () => {
    const {error , response , body} = await axiosRequest('post',requestOptions);
    return callback(error ,response , body);
  })();
};

const put = (requestOptions,callback) => {
  (async () => {
    const {error , response , body} = await axiosRequest('put',requestOptions);
    return callback(error ,response , body);
  })();
};

const sendRequest = (options, callback) => {
  (async () => {
    const {error, response, body} = await axiosRequest(options.method, options);
    return callback(error, response, body);
  })();
};

const axiosRequest = async (method, requestOptions) => {
  let error, response, body;
  const axiosRequestOpt = axiosRequestOptions(method, requestOptions);
  try {
    response = await axios.request(axiosRequestOpt);
    response.body = response.data;
    body = response.body;
  } catch (err){
    error = err;
    if (err.response) {
      response = err.response;
      response.body = response.data;
      body = response.body;
      error.statusText = response.statusText + ': ' + response.status;
      error.message = response.data;
      error.statusCode = response.status;
    } else {
      response = error;
    }
  }
  response.statusCode = response.status;
  return {error, response, body};
};

module.exports = {
  post,
  get,
  put,
  sendRequest
};